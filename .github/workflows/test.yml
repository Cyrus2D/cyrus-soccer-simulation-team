name: Test

on:
  workflow_dispatch:
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3
    - name: Prepare
      run: |
        echo "teamdir=$(pwd)" >> ${GITHUB_ENV}
        mkdir build && cd build && mkdir src
    - name: Install Lib 
      run: |
        git clone https://${{ secrets.token }}@github.com/Cyrus2D/cyruslib.git
        cd cyruslib
        mkdir build && cd build
        cmake -DTEAM_DIR=${{ env.teamdir }}/build/src/cyruslib ..
        make -j20
        make install
    - name: Build Team
      run: |
        cd build
        cmake -DTEAM_DIR_LIB=${{env.teamdir}}/build/src/cyruslib ..
        make -j20
        cd src
        cp github.sh auto.sh
    - name: Run Test
      run: |
        cd /data1/nader/workspace/robo/AutoTest2D
        ./test.sh -n gittest -l p1 -p 6000 -r yush22 -t 20 -ro 1  -cb ${{env.teamdir}}/build/src/
        sleep 120s
    - name: Get Results
      run: |
        cd /data1/nader/workspace/robo/AutoTest2D
        ./result.sh gittest
        echo a
        echo "result=$(./result.sh gittest | tail -n 9)" >> ${GITHUB_ENV} 
        echo ${{ env.result }}
        echo b
        echo "time=$(date)" >> ${GITHUB_ENV}
        echo ${{ env.time }}
        echo b
        echo "commit=$(git rev-parse --short '$GITHUB_SHA')" >> ${GITHUB_ENV}
        echo ${{ env.commit }}
    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ env.commit }}
        name: Release ${{ env.commit }}
        body: ${{ env.result }}
